<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lstar`s blog</title>
  
  
  <link href="https://lstarnana7mi.com/atom.xml" rel="self"/>
  
  <link href="https://lstarnana7mi.com/"/>
  <updated>2022-08-30T01:03:21.472Z</updated>
  <id>https://lstarnana7mi.com/</id>
  
  <author>
    <name>Lstar</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2022强网杯线下赛游记&amp;区块链WP</title>
    <link href="https://lstarnana7mi.com/2022/08/28/qwbCTF/"/>
    <id>https://lstarnana7mi.com/2022/08/28/qwbCTF/</id>
    <published>2022-08-28T13:17:45.000Z</published>
    <updated>2022-08-30T01:03:21.472Z</updated>
    
    <content type="html"><![CDATA[<p>这次强网杯初赛只拿了$40^{st}$，本以为和决赛无缘了，后来竟误打误撞进了决赛。恰好决赛时间和信息安全作品赛撞在一起，于是我便带着三位大一的同学一起参赛，也算是出乎意料的拿到了$15^{th}$。用一位学长的话来讲：“年轻人思维快，KOH打得好。”</p><p>第十五名擦边进了二等奖，和雷泽，NeSE，bk，syclover，几个顶尖战队一个奖项，可谓是“夕死可矣“（笑）。</p><h2 id="第一天"><a href="#第一天" class="headerlink" title="第一天"></a>第一天</h2><p>前一天晚上打了几局糖豆人，吃了几局鸡，早上起来略微有些晚。酒店的早餐还算不错（可惜炒饭太难吃了）。由于初赛排名过于靠后，分配了侧面最后一排的坐席。比赛一开始便放了两个KOH和所有的RW题。其中一个KOH（HashRSA）要求构造一段shellcode，执行后将两个数字放在数据区，然后计算shellcode的md5哈希并减去上述两个数字相乘，得到的数字越小得分越高。</p><p>看到这个题，我和另一位密码手就兴奋起来了（尤其是名字上还带RSA，虽然和RSA也没什么关系）。他先写了个pow，我写了个爆破脚本。由于提交并不检查是否为有效的shellcode，写好pow随意提交了我们便拿到了第一轮的第一名（+8分）（OI爷写pow就是快！）。与此同时，我的random.randint()函数不负众望的跑出了一个很不错的结果，然后直接提交便得到了不少轮次的分数。之后似乎路就走偏了，我用一台高性能服务器不断地碰撞哈希，不断给出了更优解，但是，显而易见的是，这并不是正解，不过看到AAA，0x300R等战队也在不断枚举，毕竟是KOH嘛，就挂了一个爆破脚本让他自己跑，跑到之后自动提交，居然凭借POW写的快的优势率先拿到了100分，收获了本次线下赛唯一一面flag。</p><p>由此同时，我们的misc手差不多也找到了RW题totolink的CVE尝试复现，后面又出了几个KOH，其中一个和DEF CON某年的题目差不多，要求给一段shellcode能够读取&#x2F;flag文件，且在越多的架构上能执行、shellcode长度越短，得分越高。pwn手对着这个题调了一下午；晚上临结束时又放了一个虚拟机逆向题，要求在该虚拟机内输出斐波那契数列的项。能够输出的项数越多分数越高。晚上吃完饭和misc手一起逆了一会我便睡觉了。misc手则写了一份虚拟机使用指南，给OI爷，熬到四五点写了个能输出五十多项的shellcode。</p><h2 id="第二天"><a href="#第二天" class="headerlink" title="第二天"></a>第二天</h2><p>然而，Redbud和0x300R几个战队似乎已经自己写了高精度编译器，能够输出上百项。我们的代码是照着使用说明直接写的汇编，由于push指令数量受到限制，用特判的方法也不太能输出更多项数。OI爷便开始手撸编译器。巧的是上午十点左右放了一波题，其中有一道区块链，这下终于到了我的主场。快速配了一下web3环境就开始撸，到下午两三点差不多赚了两三百分的KOH。<br>RW这边则是misc手扛起了大旗。照着CVE手搓三道totolink，web手则对着CMS刚了一天。比赛临结束时，OI爷把虚拟机冲上了第三。等到RW排队结束，我们已经在开香槟了（bushi）。最终也不负众望拿下二等奖。</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>第一次作为队长参加强网杯决赛，成绩也还算不错。可惜的是因为疫情没有办法在郑州逛一逛。只是去吃了烩面，最后一晚老师带着去吃了烤鱼。幸运的是，刚回到学校，郑州就出了几个无症状感染者，还好不用隔离。总之，再接再厉，明年再战吧。</p><h2 id="区块链KOH（money）"><a href="#区块链KOH（money）" class="headerlink" title="区块链KOH（money）"></a>区块链KOH（money）</h2><h3 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h3><p>题目给每个战队分配了100eth，同时在测试链上部署了如下的合约。看起来像是一道生拼硬凑的题（甚至其中一部分还是某个其他比赛的原题），每过一关就可以拿到一些钱。合约代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^0.5.10;</span><br><span class="line"></span><br><span class="line">contract Money &#123;</span><br><span class="line">    mapping (address =&gt; bool) private perm;</span><br><span class="line">    address[32] private users;</span><br><span class="line">    address owner;</span><br><span class="line">    function () external payable &#123;&#125;</span><br><span class="line">    function donate() external payable &#123;&#125;</span><br><span class="line">    constructor() public payable&#123;</span><br><span class="line">        owner = msg.sender;</span><br><span class="line">        users = [];//所有比赛选手的账号</span><br><span class="line">        for(uint i = 0; i &lt; users.length; i++)&#123;</span><br><span class="line">            perm[users[i]] = true;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    mapping (address =&gt; bool) private p3f1;</span><br><span class="line">    function easy1() external payable &#123;</span><br><span class="line">        assert(!p3f1[msg.sender]);</span><br><span class="line">        assert(perm[msg.sender]);</span><br><span class="line">        uint dice = uint(keccak256(abi.encode(msg.sender,block.number))) % 6;</span><br><span class="line">        if(dice == 0)&#123;</span><br><span class="line">            msg.sender.transfer(1 ether);</span><br><span class="line">            p3f1[msg.sender] = true;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    mapping (address =&gt; bool) private p3f2;</span><br><span class="line">    mapping (address =&gt; uint) private last_block;</span><br><span class="line">    function easy2() external payable &#123;</span><br><span class="line">        assert(!p3f2[msg.sender]);</span><br><span class="line">        assert(perm[msg.sender]);</span><br><span class="line">        assert(block.number != last_block[msg.sender]);</span><br><span class="line">        uint dice = uint(keccak256(abi.encode(msg.sender,block.number,now))) % 6;</span><br><span class="line">        last_block[msg.sender] = block.number;</span><br><span class="line">        if(dice == 0)&#123;</span><br><span class="line">            msg.sender.transfer(2 ether);</span><br><span class="line">            p3f2[msg.sender] = true;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">bytearray(keccak_256(data).digest()[:4])</span><br><span class="line">    mapping (address =&gt; uint) gtm;</span><br><span class="line">    function guess_the_number(uint nonce) external payable &#123;</span><br><span class="line">        assert(perm[msg.sender]);</span><br><span class="line">        assert(gtm[msg.sender] &lt;= 20);</span><br><span class="line">        assert(msg.value == 1 ether);</span><br><span class="line">        assert(nonce &lt;= 100);</span><br><span class="line">        uint256 temp = uint256(keccak256(abi.encode(msg.sender)));</span><br><span class="line">        temp = uint256(keccak256(abi.encode(temp, block.number)));</span><br><span class="line">        temp = uint256(keccak256(abi.encode(temp, temp)));</span><br><span class="line">        temp = temp % 100;</span><br><span class="line">        if (nonce == temp) &#123;</span><br><span class="line">            gtm[msg.sender]++;</span><br><span class="line">            msg.sender.transfer(5 ether);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    mapping (address =&gt; uint) 0;</span><br><span class="line">    address payable private p1;</span><br><span class="line">    uint256 private dplays;</span><br><span class="line">    function duel1v1() external payable &#123;</span><br><span class="line">        assert(perm[msg.sender]);</span><br><span class="line">        assert(duel[msg.sender] &lt;= 30);</span><br><span class="line">        assert(msg.value == 1 ether);</span><br><span class="line">        assert(p1 != msg.sender);</span><br><span class="line">        duel[msg.sender]++;</span><br><span class="line">        if(dplays == 0)&#123;</span><br><span class="line">            p1 = msg.sender;</span><br><span class="line">            dplays = 1;</span><br><span class="line">        &#125;</span><br><span class="line">        else &#123;</span><br><span class="line">            uint winner =  uint256(keccak256(abi.encode(msg.sender,p1))) % 2;</span><br><span class="line">            if(winner == 0)&#123;</span><br><span class="line">                msg.sender.transfer(5 ether);</span><br><span class="line">            &#125;</span><br><span class="line">            else &#123;</span><br><span class="line">                p1.transfer(6 ether);</span><br><span class="line">            &#125;</span><br><span class="line">            delete dplays;</span><br><span class="line">            delete p1;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    address payable private p1h;</span><br><span class="line">    uint256 dhplays;</span><br><span class="line">    function duel_highroller() external payable &#123;</span><br><span class="line">        assert(perm[msg.sender]);</span><br><span class="line">        assert(duel[msg.sender] &lt;= 30);</span><br><span class="line">        assert(msg.value == 5 ether);</span><br><span class="line">        assert(p1h != msg.sender);</span><br><span class="line">        duel[msg.sender]++;</span><br><span class="line">        if(dhplays == 0)&#123;</span><br><span class="line">            p1h = msg.sender;</span><br><span class="line">            dhplays = 1;</span><br><span class="line">        &#125;</span><br><span class="line">        else &#123;</span><br><span class="line">            uint winner =  uint256(keccak256(abi.encode(msg.sender,p1h))) % 2;</span><br><span class="line">            if(winner == 0)&#123;</span><br><span class="line">                msg.sender.transfer(10 ether);</span><br><span class="line">            &#125;</span><br><span class="line">            else &#123;</span><br><span class="line">                p1h.transfer(12 ether);</span><br><span class="line">            &#125;</span><br><span class="line">            delete dhplays;</span><br><span class="line">            delete p1h;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    mapping (address =&gt; uint256) previous_max;</span><br><span class="line">    function pay_to_mine(uint nonce, uint d) external payable &#123;</span><br><span class="line">        assert(msg.value == 1 ether);</span><br><span class="line">        assert(d &gt;= 26);</span><br><span class="line">        assert(d &gt; previous_max[msg.sender]);</span><br><span class="line">        uint256 hash = uint256(keccak256(abi.encode(nonce,msg.sender)));</span><br><span class="line">        uint mask = 1&lt;&lt;d;</span><br><span class="line">        if (hash % mask == 0) &#123;</span><br><span class="line">            previous_max[msg.sender] = d;</span><br><span class="line">            uint amt = 1&lt;&lt;(d-26);</span><br><span class="line">            msg.sender.transfer(amt);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    address payable public richest;</span><br><span class="line">    uint256 public most_sent;</span><br><span class="line">    uint256 public coup_block;</span><br><span class="line">    mapping (address =&gt; uint256) pending_withdrawals;</span><br><span class="line">    function KOTH_coup() public payable returns (bool) &#123;</span><br><span class="line">        if (msg.value &gt; most_sent) &#123;</span><br><span class="line">            if(coup_block == 0)&#123;</span><br><span class="line">                coup_block = block.number;</span><br><span class="line">            &#125;</span><br><span class="line">            richest = msg.sender;</span><br><span class="line">            pending_withdrawals[richest] += msg.value;</span><br><span class="line">            uint amount = block.number - coup_block;</span><br><span class="line">            amount = amount&gt;&gt;3;</span><br><span class="line">            amount = amount + 1;</span><br><span class="line">            richest.transfer(amount * (6 ether));</span><br><span class="line">            coup_block = block.number;</span><br><span class="line">            most_sent = msg.value;</span><br><span class="line">            return true;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    function KOTH_withdraw() public &#123;</span><br><span class="line">        uint256 amt = pending_withdrawals[msg.sender];</span><br><span class="line">        pending_withdrawals[msg.sender] = 0;</span><br><span class="line">        msg.sender.transfer(amt);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    uint256 public nonce;</span><br><span class="line">    uint256 lasttime;</span><br><span class="line">    function bet(uint256 value, uint256 _mod) public payable &#123;</span><br><span class="line">        require(msg.value == 1 ether);</span><br><span class="line">        address _addr = msg.sender;</span><br><span class="line"></span><br><span class="line">        require(lasttime != block.timestamp);</span><br><span class="line">        require(_mod &gt;= 2 &amp;&amp; _mod &lt; 10);</span><br><span class="line"></span><br><span class="line">        value = value % _mod;</span><br><span class="line"></span><br><span class="line">        uint32 size;</span><br><span class="line">        assembly &#123;</span><br><span class="line">            size := extcodesize(_addr)</span><br><span class="line">        &#125;</span><br><span class="line">        require(size == 0);</span><br><span class="line"></span><br><span class="line">        uint256 rand = uint256(</span><br><span class="line">            keccak256(</span><br><span class="line">                abi.encodePacked(</span><br><span class="line">                    nonce,</span><br><span class="line">                    block.timestamp,</span><br><span class="line">                    block.difficulty,</span><br><span class="line">                    msg.sender</span><br><span class="line">                )</span><br><span class="line">            )</span><br><span class="line">        ) % _mod;</span><br><span class="line">        nonce += _mod;</span><br><span class="line">        lasttime = block.timestamp;</span><br><span class="line"></span><br><span class="line">        if (value == rand) &#123;</span><br><span class="line">            msg.sender.transfer(3 ether);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    uint256 private plays = 0;</span><br><span class="line">    uint256 private total = 0;</span><br><span class="line">    uint256[101] private counter;</span><br><span class="line">    address payable[101] private identity;</span><br><span class="line">    address payable[5] private already_played;</span><br><span class="line">    </span><br><span class="line">    mapping (address =&gt; uint) mayor;</span><br><span class="line"></span><br><span class="line">    function mayor_voting() external payable &#123;</span><br><span class="line">        if(msg.value  % (1 ether) != 0 || msg.value == 0 || msg.value &gt; (100 ether))&#123;</span><br><span class="line">            revert();</span><br><span class="line">        &#125;</span><br><span class="line">        assert(mayor[msg.sender] &lt;= 30);</span><br><span class="line">        uint256 val = msg.value / (1 ether);</span><br><span class="line"></span><br><span class="line">        for(uint i = 0; i &lt; 5; i++)&#123;</span><br><span class="line">            if(already_played[i] == msg.sender) &#123;</span><br><span class="line">                revert();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        mayor[msg.sender]++;</span><br><span class="line">        already_played[plays] = msg.sender;</span><br><span class="line">        plays++;</span><br><span class="line">        counter[val]++;</span><br><span class="line">        identity[val] = msg.sender;</span><br><span class="line">        total += msg.value;</span><br><span class="line"></span><br><span class="line">        if (plays == 5) &#123;</span><br><span class="line">            bool paid = false;</span><br><span class="line">            for (uint i = 0; i &lt; 101; i++) &#123;</span><br><span class="line">                if(counter[i] == 1 &amp;&amp; !paid)&#123;</span><br><span class="line">                    identity[i].transfer(total + (5 ether));</span><br><span class="line">                    paid = true;</span><br><span class="line">                &#125;</span><br><span class="line">                delete counter[i];</span><br><span class="line">                delete identity[i];</span><br><span class="line">            &#125;</span><br><span class="line">            plays = 0;</span><br><span class="line">            total = 0;</span><br><span class="line"></span><br><span class="line">            for (uint i = 0; i &lt; 5; i++)</span><br><span class="line">                delete already_played[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>挨个函数的分析:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">mapping (address =&gt; bool) private p3f1;</span><br><span class="line">function easy1() external payable &#123;</span><br><span class="line">    assert(!p3f1[msg.sender]);</span><br><span class="line">    assert(perm[msg.sender]);</span><br><span class="line">    uint dice = uint(keccak256(abi.encode(msg.sender,block.number))) % 6;</span><br><span class="line">    if(dice == 0)&#123;</span><br><span class="line">        msg.sender.transfer(1 ether);</span><br><span class="line">        p3f1[msg.sender] = true;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mapping (address =&gt; bool) private p3f2;</span><br><span class="line">mapping (address =&gt; uint) private last_block;</span><br><span class="line">function easy2() external payable &#123;</span><br><span class="line">    assert(!p3f2[msg.sender]);</span><br><span class="line">    assert(perm[msg.sender]);</span><br><span class="line">    assert(block.number != last_block[msg.sender]);</span><br><span class="line">    uint dice = uint(keccak256(abi.encode(msg.sender,block.number,now))) % 6;</span><br><span class="line">    last_block[msg.sender] = block.number;</span><br><span class="line">    if(dice == 0)&#123;</span><br><span class="line">        msg.sender.transfer(2 ether);</span><br><span class="line">        p3f2[msg.sender] = true;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这次强网杯初赛只拿了$40^{st}$，本以为和决赛无缘了，后来竟误打误撞进了决赛。恰好决赛时间和信息安全作品赛撞在一起，于是我便带着三位大一的同学一起参赛，也算是出乎意料的拿到了$15^{th}$。用一位学长的话来讲：“年轻人思维快，KOH打得好。”&lt;/p&gt;
&lt;p&gt;第十五</summary>
      
    
    
    
    <category term="CTF" scheme="https://lstarnana7mi.com/categories/CTF/"/>
    
    
    <category term="强网杯" scheme="https://lstarnana7mi.com/tags/%E5%BC%BA%E7%BD%91%E6%9D%AF/"/>
    
    <category term="BlockChain" scheme="https://lstarnana7mi.com/tags/BlockChain/"/>
    
  </entry>
  
  <entry>
    <title>RoboGame队友交流</title>
    <link href="https://lstarnana7mi.com/2022/08/28/%E5%9F%BA%E6%9C%AC%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/"/>
    <id>https://lstarnana7mi.com/2022/08/28/%E5%9F%BA%E6%9C%AC%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E/</id>
    <published>2022-08-28T13:17:45.000Z</published>
    <updated>2022-09-06T16:06:26.614Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基本接口说明"><a href="#基本接口说明" class="headerlink" title="基本接口说明"></a>基本接口说明</h2><p>[TOC]</p><h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>本文档用于RoboGame队友交流:)</p><p>这里放所有的疑问:后续再添加</p><p>请在新建project时选择如下型号</p><p><img src="C:\Users\lst4r\Desktop\pics\image-20220906231259317.png" alt="image-20220906231259317"></p><p>这里请选择Serial Wire</p><p><img src="C:\Users\lst4r\Desktop\pics\image-20220906231401782.png" alt="image-20220906231401782"></p><p>这里RCC请按照如图所示配置</p><p><img src="C:\Users\lst4r\Desktop\pics\image-20220906231451967.png" alt="image-20220906231451967"></p><p>其他注意事项请参照ms的说明:</p><ol><li>PWM波输出: <a href="https://gitee.com/mcpocket/RoboWalker/blob/master/%E7%94%B5%E6%8E%A7%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/%E5%AE%9E%E9%AA%8C%E6%95%99%E7%A8%8B/%E7%AC%AC%E4%BA%94%E6%AC%A1%E5%AE%9E%E9%AA%8C-pwm%E5%AE%9E%E7%8E%B0%E5%91%BC%E5%90%B8%E7%81%AF.md">https://gitee.com/mcpocket/RoboWalker/blob/master/%E7%94%B5%E6%8E%A7%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/%E5%AE%9E%E9%AA%8C%E6%95%99%E7%A8%8B/%E7%AC%AC%E4%BA%94%E6%AC%A1%E5%AE%9E%E9%AA%8C-pwm%E5%AE%9E%E7%8E%B0%E5%91%BC%E5%90%B8%E7%81%AF.md</a></li><li>入门(基本GPIO设置):<a href="https://gitee.com/mcpocket/RoboWalker/blob/master/%E7%94%B5%E6%8E%A7%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/%E5%AE%9E%E9%AA%8C%E6%95%99%E7%A8%8B/%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%AE%9E%E9%AA%8C-led%E9%97%AA%E7%83%81.md">https://gitee.com/mcpocket/RoboWalker/blob/master/%E7%94%B5%E6%8E%A7%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/%E5%AE%9E%E9%AA%8C%E6%95%99%E7%A8%8B/%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%AE%9E%E9%AA%8C-led%E9%97%AA%E7%83%81.md</a></li><li>入门视频: <a href="https://space.bilibili.com/337732684/channel/seriesdetail?sid=439112">https://space.bilibili.com/337732684/channel/seriesdetail?sid=439112</a></li></ol><p>请注意!!!所有的地线都接在一起,”低电平”指的就是地线(负极)</p><p>这里记得勾选 “Generate peripheral initialzation as a pair of “.c&#x2F;.h”…”</p><p><img src="C:\Users\lst4r\AppData\Roaming\Typora\typora-user-images\image-20220906234904886.png" alt="image-20220906234904886"></p><h2 id="关于输出PWN波"><a href="#关于输出PWN波" class="headerlink" title="关于输出PWN波"></a>关于输出PWN波</h2><p>PWM波指的是周期性方波. 其输出有两个指标:频率和占空比,配置时请严格按照<a href="https://gitee.com/mcpocket/RoboWalker/blob/master/%E7%94%B5%E6%8E%A7%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/%E5%AE%9E%E9%AA%8C%E6%95%99%E7%A8%8B/%E7%AC%AC%E4%BA%94%E6%AC%A1%E5%AE%9E%E9%AA%8C-pwm%E5%AE%9E%E7%8E%B0%E5%91%BC%E5%90%B8%E7%81%AF.md%E9%85%8D%E7%BD%AE">https://gitee.com/mcpocket/RoboWalker/blob/master/%E7%94%B5%E6%8E%A7%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/%E5%AE%9E%E9%AA%8C%E6%95%99%E7%A8%8B/%E7%AC%AC%E4%BA%94%E6%AC%A1%E5%AE%9E%E9%AA%8C-pwm%E5%AE%9E%E7%8E%B0%E5%91%BC%E5%90%B8%E7%81%AF.md配置</a>.</p><p>其中频率f由以下参数控制: F:系统频率, PSC(预分频值),ARR(自动重装载值),满足:<br>$$<br>f&#x3D;\frac{F}{(1+PSC)*(1+ARR)}<br>$$</p><p>占空比Percent(0~1的数值)由pulse(只能是整数)决定,满足:<br>$$<br>percentage&#x3D;\frac{pulse}{(1+ARR)}<br>$$</p><p>其中在CUBEMX32中配置时如下:</p><p>F为图中的HCLK(本图为50Hz)</p><p><img src="C:\Users\lst4r\Desktop\pics\image-20220906230832856.png" alt="image-20220906230832856"></p><p>PSC和ARR</p><p><img src="C:\Users\lst4r\Desktop\pics\image-20220906230310947.png" alt="image-20220906230310947"></p><p>pulse</p><p><img src="C:\Users\lst4r\Desktop\pics\image-20220906230757672.png" alt="image-20220906230757672"></p><p>再强调一次!千万要把ms的视频教程CUBEMX32看完!!!!!然后对照md文档操作,如果有问题或者不输出 请按下单片机rst按键(在最下左方)用于恢复刚烧写进去的状态(不是出厂设置!!!!)</p><p>此外 上述三个参数在generate code之后 在如下地方修改(或者传参数):</p><p>&#x2F;core&#x2F;tim.c, MX_TIM3_Init 函数,line 40, 42, 65 请看下图注释</p><p><img src="C:\Users\lst4r\AppData\Roaming\Typora\typora-user-images\image-20220906235227424.png" alt="image-20220906235227424"></p><p>最后 在main函数中调用</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HAL_TIM_PWM_Start(&amp;htim3,TIM_CHANNEL_1);</span><br></pre></td></tr></table></figure><p>类似这样的函数 即可让其输出,其中htim3取决于你的tim配置,CHANNEL_x取决于配置的哪个CHANNEL,请参照ms的文档.</p><h2 id="关于饲服电机"><a href="#关于饲服电机" class="headerlink" title="关于饲服电机"></a>关于饲服电机</h2><p>这是用来推动冰壶的,应该以恒定加速度推进然后恒定速率收回.加速度速率等由PWM波频率决定</p><p>该电机有如下接口:</p><p><img src="C:\Users\lst4r\Desktop\pics\E7376650AC0947925546E6192559120D.jpg" alt="img"></p><p>其中只需要接:</p><p>控制信号五根:</p><ol><li>V+ 单片机高电平 V- 低电平</li><li>Ve PWM波输出,具体说明书(如怎么样的频率控制怎么样的转速)明天更新(2022.9.6),淘宝客服睡了()</li><li>EN 理论上输出高电平为使能,但是我不知道这是不是反过来的,总之尝试一直输出高电平或者一直输出低电平就行</li><li>DR 决定转的方向 绑定一个GPIO(按照前面的LED灯类似的设置,但是触发用代码触发,具体实现参见ms教程),使得代码可以控制其正转反转(输出高电平正传 低电平反转)</li></ol><p>电源两根:</p><p>DC电源(接蓝色电源正负,24V)</p><h2 id="步进电机"><a href="#步进电机" class="headerlink" title="步进电机"></a>步进电机</h2><p>这是用来控制爪子上升下降的.</p><p>说明文档:<a href="https://blog.csdn.net/zhangdatou666/article/details/125494728">https://blog.csdn.net/zhangdatou666/article/details/125494728</a></p><p>如下图,</p><ol><li>V+接蓝色电源(24V)</li><li>Gnd接低电平</li><li>Com接单片机高电平(5V)</li><li>En,Dir同前EN DR(<em>*<em>*</em>*注意：En端口不接线情况下，En端口默认是高电平状态；****</em>*)</li><li>Stp输出PWM波 由频率控制转速.具体控制见文档的菜单选项 可以设置什么样的频率对应什么样的转速(建议自己按照实际情况定即可,因为我们只需要恒定速率)</li></ol><p><img src="C:\Users\lst4r\Desktop\pics\61C9FBA6E067706121CF41EE3D87BCD1.jpg" alt="img"></p><h2 id="关于轮子-未完"><a href="#关于轮子-未完" class="headerlink" title="关于轮子(未完)"></a>关于轮子(未完)</h2><h2 id="关于传感器-未完"><a href="#关于传感器-未完" class="headerlink" title="关于传感器(未完)"></a>关于传感器(未完)</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;基本接口说明&quot;&gt;&lt;a href=&quot;#基本接口说明&quot; class=&quot;headerlink&quot; title=&quot;基本接口说明&quot;&gt;&lt;/a&gt;基本接口说明&lt;/h2&gt;&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerl</summary>
      
    
    
    
    <category term="RoboGame" scheme="https://lstarnana7mi.com/categories/RoboGame/"/>
    
    <category term="硬件接口" scheme="https://lstarnana7mi.com/categories/RoboGame/%E7%A1%AC%E4%BB%B6%E6%8E%A5%E5%8F%A3/"/>
    
    
    <category term="RoboGame" scheme="https://lstarnana7mi.com/tags/RoboGame/"/>
    
  </entry>
  
</feed>
